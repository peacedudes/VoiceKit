//
//  NameResolver.swift
//  VoiceLogin
//
//  09-10-2025
//  Generated by GPT-5 (OpenAI) â€” collaborator: rdoggett
//
//  Strict name resolution: exact match (case/diacritic-insensitive), no nicknames.
//

import Foundation

struct NameResolver {

    enum Policy {
        case strictExact // exact match after trimming/diacritic folding
    }

    var policy: Policy = .strictExact

    func resolve(transcript raw: String, allowed: [String]?) -> String? {
        let cleaned = normalize(raw)
        guard let allowed, !allowed.isEmpty else {
            return raw.trimmingCharacters(in: .whitespacesAndNewlines)
        }
        var table: [String: String] = [:]
        for a in allowed { table[normalize(a)] = a }
        switch policy {
        case .strictExact:
            return table[cleaned]
        }
    }

    private func normalize(_ s: String) -> String {
        let trimmed = s.trimmingCharacters(in: .whitespacesAndNewlines)
            .trimmingCharacters(in: .punctuationCharacters)
        let folded = trimmed.folding(options: [.diacriticInsensitive, .caseInsensitive], locale: .autoupdatingCurrent)
        let collapsed = folded.replacingOccurrences(of: "\\s+", with: " ", options: .regularExpression)
        return collapsed
    }
}
