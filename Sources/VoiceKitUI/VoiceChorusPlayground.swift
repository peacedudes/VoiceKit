//
//  VoiceChorusPlayground.swift
//  VoiceKitUI
//
//  Generated by GPT-5 (OpenAI) â€” collaborator: robert
//  date: 09-16-2025
//

import SwiftUI
import VoiceKitCore

struct VoiceChorusPlayground: View {
    @State private var selectedVoices: Set<String> = []
    @State private var pitch: Float = 1.0 // Using Float to match expected types
    @State private var rate: Float = 1.0
    @State private var volume: Float = 1.0
    @State private var chorusText: String = "God in his wisdom made the fly\nAnd then forgot to tell us why."

    let availableVoices: [String] = [
        "com.apple.ttsbundle.Samantha-compact",
        "com.apple.ttsbundle.Alex-compact",
        "com.apple.ttsbundle.Fred-compact"
    ]

    private var createEngine: () -> RealVoiceIO = {
        RealVoiceIO()
    }

    var body: some View {
        VStack {
            // Controls Section
            VStack {
                Text("Voice Chorus Playground")
                    .font(.headline)
                
                // Settings Sliders
                VStack {
                    sliderView(title: "Pitch", value: $pitch, range: 0.5...2.0)
                    sliderView(title: "Rate", value: $rate, range: 0.5...2.0)
                }

                // Text Editor
                TextEditor(text: $chorusText)
                    .frame(height: 80)
                    .border(Color.gray)
                    .padding(.horizontal)
            }

            // Voices List Section
            List {
                Section(header: Text("Voices")) {
                    ForEach(availableVoices, id: \.self) { voiceID in
                        Toggle(isOn: Binding(
                            get: { selectedVoices.contains(voiceID) },
                            set: { isSelected in
                                if isSelected {
                                    selectedVoices.insert(voiceID)
                                } else {
                                    selectedVoices.remove(voiceID)
                                }
                            }
                        )) {
                            Text(voiceID)
                        }
                    }
                }
                
                // Play Button
                Button(action: playChorus) {
                    Text("Play Chorus")
                        .frame(maxWidth: .infinity)
                }
                .padding()
                .background(Color.blue)
                .foregroundColor(.white)
                .cornerRadius(8)
            }
            .frame(maxHeight: .infinity) // Ensures list is scrollable
        }
        .padding()
    }

    private func sliderView(title: String, value: Binding<Float>, range: ClosedRange<Float>) -> some View {
        VStack {
            Text("\(title): \(value.wrappedValue, specifier: "%.2f")")
            Slider(value: value, in: range)
                .padding(.horizontal)
        }
    }

    private func playChorus() {
        let chorus = VoiceChorus(makeEngine: createEngine)
        let profiles = selectedVoices.map {
            TTSVoiceProfile(id: $0, displayName: "", rate: rate, pitch: pitch, volume: volume)
        }
        Task {
            await chorus.sing(chorusText, withVoiceProfiles: profiles)
        }
    }
}

struct VoiceChorusPlayground_Previews: PreviewProvider {
    static var previews: some View {
        VoiceChorusPlayground()
    }
}
