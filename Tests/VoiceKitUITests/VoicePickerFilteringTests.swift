//
//  VoicePickerFilteringTests.swift
//  VoiceKitUITests
//
//  Generated by GPT-5 (OpenAI) â€” collaborator: rdoggett
//  date: 09-14-2025
//

import XCTest
import VoiceKitCore
import VoiceKitUI

@MainActor
final class VoicePickerFilteringTests: XCTestCase {

    @MainActor
    final class FakeTTS: TTSConfigurable {
        var voices: [TTSVoiceInfo] = []
        func availableVoices() -> [TTSVoiceInfo] { voices }
        func setVoiceProfile(_ profile: TTSVoiceProfile) {}
        func getVoiceProfile(id: String) -> TTSVoiceProfile? { nil }
        func setDefaultVoiceProfile(_ profile: TTSVoiceProfile) {}
        func getDefaultVoiceProfile() -> TTSVoiceProfile? { nil }
        func setMasterControl(_ master: TTSMasterControl) {}
        func getMasterControl() -> TTSMasterControl { .init() }
        func speak(_ text: String, using voiceID: String?) async {}
        func stopSpeakingNow() {}
    }

    private func currentLangPrefix() -> String {
        let tag = Locale.preferredLanguages.first ?? Locale.current.identifier
        return tag.split(separator: "-").first.map(String.init)?.lowercased() ?? "en"
    }

    func testLanguageFilterAndHidden() async {
        let lang = currentLangPrefix()
        let other = lang == "en" ? "fr" : "en"

        let fake = FakeTTS()
        fake.voices = [
            TTSVoiceInfo(id: "v1", name: "Alpha", language: "\(lang)-US"),
            TTSVoiceInfo(id: "v2", name: "Beta", language: "\(lang)-GB"),
            TTSVoiceInfo(id: "v3", name: "Gamma", language: "\(other)-FR")
        ]

        let store = VoiceProfilesStore(filename: "filter-\(UUID().uuidString).json")
        let vm = VoicePickerViewModel(tts: fake, store: store)

        // Default filter is .current
        XCTAssertEqual(vm.filteredVoices.count, 2, "Should show only current-language voices")

        // Hide one of the current-language voices
        store.setHidden("v2", true)
        XCTAssertEqual(vm.filteredVoices.map(\.id).sorted(), ["v1"], "Hidden voice should be excluded by default")

        // Show hidden toggle reveals it
        vm.showHidden = true
        XCTAssertEqual(Set(vm.filteredVoices.map(\.id)), Set(["v1","v2"]), "Hidden voice should appear when showHidden is true")

        // Switch to .all shows all three
        vm.languageFilter = .all
        XCTAssertEqual(Set(vm.filteredVoices.map(\.id)), Set(["v1","v2","v3"]))
    }
}
