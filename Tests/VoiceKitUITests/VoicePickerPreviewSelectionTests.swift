//
//  VoicePickerPreviewSelectionTests.swift
//  VoiceKitUITests
//
//  Generated by GPT-5 (OpenAI) â€” collaborator: rdoggett
//  date: 09-14-2025
//

import XCTest
import VoiceKitCore
import VoiceKitUI

@MainActor
final class VoicePickerPreviewSelectionTests: XCTestCase {

    @MainActor
    final class FakeTTS: TTSConfigurable {
        var voices: [TTSVoiceInfo] = []
        var lastSpeakText: String?
        var lastSpeakVoiceID: String?
        var profiles: [String: TTSVoiceProfile] = [:]
        var defaultProfile: TTSVoiceProfile?
        var master: TTSMasterControl = .init()
        func availableVoices() -> [TTSVoiceInfo] { voices }
        func setVoiceProfile(_ profile: TTSVoiceProfile) { profiles[profile.id] = profile }
        func getVoiceProfile(id: String) -> TTSVoiceProfile? { profiles[id] }
        func setDefaultVoiceProfile(_ profile: TTSVoiceProfile) { defaultProfile = profile }
        func getDefaultVoiceProfile() -> TTSVoiceProfile? { defaultProfile }
        func setMasterControl(_ master: TTSMasterControl) { self.master = master }
        func getMasterControl() -> TTSMasterControl { master }
        func speak(_ text: String, using voiceID: String?) async { lastSpeakText = text; lastSpeakVoiceID = voiceID }
        func stopSpeakingNow() {}
    }

    private func currentLanguagePrefix() -> String {
        let preferred = Locale.preferredLanguages.first ?? Locale.current.identifier
        return preferred.split(separator: "-").first.map(String.init)?.lowercased() ?? "en"
    }

    func testShowHiddenAffectsFilteredVoices() async {
        let lang = currentLanguagePrefix()
        let tts = FakeTTS()
        tts.voices = [
            TTSVoiceInfo(id: "vh", name: "Hidden", language: "\(lang)-US"),
            TTSVoiceInfo(id: "vs", name: "Shown",  language: "\(lang)-US")
        ]
        let store = VoiceProfilesStore(filename: "hidden-\(UUID().uuidString).json")
        let vm = VoicePickerViewModel(tts: tts, store: store)

        store.setHidden("vh", true)
        // Default is showHidden = false, so only vs appears
        XCTAssertEqual(vm.filteredVoices.map(\.id), ["vs"])

        // Now allow hidden items to be shown
        vm.showHidden = true
        XCTAssertEqual(Set(vm.filteredVoices.map(\.id)), Set(["vh","vs"]))
    }
}
