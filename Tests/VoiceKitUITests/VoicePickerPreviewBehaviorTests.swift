//
//  VoicePickerPreviewBehaviorTests.swift
//  VoiceKit
//
//  Generated by GPT-5 (OpenAI) â€” collaborator: rdoggett
//  date: 09-17-2025
//
//  Updates for current API:
//  - TTSMasterControl initializer order is (rateVariation, pitchVariation, volume).
//  - TTSVoiceProfile: rate is Double; pitch/volume are Float.
//  - Tests exercise preview debounce and interruption behavior without relying on displayName.
//

import XCTest
import AVFoundation
@testable import VoiceKitUI
@testable import VoiceKit

import TestSupport
@MainActor
final class VoicePickerPreviewBehaviorTests: TestSupport.QoSNeutralizingTestCase {

    private func cleanup(_ filename: String) {
        let appSupport = FileManager.default.urls(for: .applicationSupportDirectory, in: .userDomainMask).first
            ?? FileManager.default.temporaryDirectory
        let url = appSupport.appendingPathComponent("VoiceIO", isDirectory: true).appendingPathComponent(filename)
        try? FileManager.default.removeItem(at: url)
    }

    func testMasterPreviewDebounce() async throws {
        let filename = "vm_preview_debounce.json"
        let store = VoiceProfilesStore(filename: filename)
        defer { cleanup(filename) }

        let tts = RealVoiceIO()
        let vm = VoicePickerViewModel(tts: tts, store: store)
        vm.refreshAvailableVoices()

        // Opt in to system voice queries for this test and avoid full enumeration.
        await VoiceKitTestMode.setAllowSystemVoiceQueries(true)
        defer { Task { await VoiceKitTestMode.setAllowSystemVoiceQueries(false) } }
        // Use a known identifier; display name lookup still exercises AV on main.
        let id = "com.apple.speech.synthesis.voice.Alex"
        store.setProfile(TTSVoiceProfile(id: id, rate: 0.55, pitch: 1.0, volume: 1.0))
        vm.applyToTTS()

        // Rapidly update master; debounce should consolidate previews
        vm.updateMaster(TTSMasterControl(rateVariation: 0.010, pitchVariation: 0.015, volume: 1.00), previewKind: "one")
        vm.updateMaster(TTSMasterControl(rateVariation: 0.012, pitchVariation: 0.020, volume: 1.05), previewKind: "two")
        vm.updateMaster(TTSMasterControl(rateVariation: 0.015, pitchVariation: 0.025, volume: 1.10), previewKind: "three")

        // Allow debounce window to elapse
        try? await Task.sleep(nanoseconds: 300_000_000)

        // Stop any preview
        vm.stopPreview()
        // Let background audio callbacks drain to avoid reporter/disconnect noise
        // and structural concurrency warnings after test completion.
        await Task.yield()
        try? await Task.sleep(nanoseconds: 10_000_000) // 10 ms
        // If no crash and no hangs, behavior is acceptable for this unit test scope
    }

    func testPreviewInterruptsOnProfileChange() async throws {
        let filename = "vm_preview_interrupt.json"
        let store = VoiceProfilesStore(filename: filename)
        defer { cleanup(filename) }

        let tts = RealVoiceIO()
        let vm = VoicePickerViewModel(tts: tts, store: store)
        vm.refreshAvailableVoices()

        await VoiceKitTestMode.setAllowSystemVoiceQueries(true)
        defer { Task { await VoiceKitTestMode.setAllowSystemVoiceQueries(false) } }
        let id = "com.apple.speech.synthesis.voice.Alex"
        var p = TTSVoiceProfile(id: id, rate: 0.55,
                                pitch: 1.0, volume: 1.0)
        store.setProfile(p)
        vm.applyToTTS()

        // Start a preview
        vm.playPreview(phrase: vm.samplePhrase(for: p), voiceID: id)

        // Change profile quickly; playPreview should interrupt the previous one
        p.rate = 0.65
        p.pitch = 1.1
        p.volume = 0.95
        vm.updateProfile(p)
        vm.playPreview(phrase: vm.samplePhrase(for: p, suffix: "updated"), voiceID: id)

        try? await Task.sleep(nanoseconds: 150_000_000)
        vm.stopPreview()
        // Drain background callbacks to avoid reporter/disconnect noise
        // and structural concurrency warnings after test completion.
        await Task.yield()
        try? await Task.sleep(nanoseconds: 10_000_000)
    }

    func testPreviewReflectsMasterChanges() async throws {
        let filename = "vm_preview_master_reflect.json"
        let store = VoiceProfilesStore(filename: filename)
        defer { cleanup(filename) }

        let tts = RealVoiceIO()
        let vm = VoicePickerViewModel(tts: tts, store: store)
        vm.refreshAvailableVoices()

        await VoiceKitTestMode.setAllowSystemVoiceQueries(true)
        defer { Task { await VoiceKitTestMode.setAllowSystemVoiceQueries(false) } }
        let id = "com.apple.speech.synthesis.voice.Alex"
        let p = TTSVoiceProfile(id: id, rate: 0.5,
                                pitch: 1.0, volume: 1.0)
        store.setProfile(p)
        vm.applyToTTS()

        // Kick off a preview
        vm.playPreview(phrase: vm.samplePhrase(for: p), voiceID: id)

        // Change master to quieter, then louder, using correct argument order
        vm.updateMaster(TTSMasterControl(rateVariation: 0.0, pitchVariation: 0.0, volume: 0.8), previewKind: "at lower volume")
        vm.updateMaster(TTSMasterControl(rateVariation: 0.0, pitchVariation: 0.0, volume: 1.2), previewKind: "at higher volume")

        try? await Task.sleep(nanoseconds: 200_000_000)
        vm.stopPreview()
        // Drain background callbacks to avoid reporter/disconnect noise
        // and structural concurrency warnings after test completion.
        await Task.yield()
        try? await Task.sleep(nanoseconds: 10_000_000)
    }
}
