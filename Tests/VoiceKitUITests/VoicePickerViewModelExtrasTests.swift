//
//  VoicePickerViewModelExtrasTests.swift
//  VoiceKitUITests
//
//  Generated by GPT-5 (OpenAI) â€” collaborator: rdoggett
//  date: 09-14-2025
//

import XCTest
import VoiceKitCore
import VoiceKitUI

@MainActor
final class VoicePickerViewModelExtrasTests: XCTestCase {

    @MainActor
    final class FakeTTS: TTSConfigurable {
        var voices: [TTSVoiceInfo] = []
        var profiles: [String: TTSVoiceProfile] = [:]
        var defaultProfile: TTSVoiceProfile?
        var master: TTSMasterControl = .init()
        var stopSpeakingCount = 0

        func availableVoices() -> [TTSVoiceInfo] { voices }
        func setVoiceProfile(_ profile: TTSVoiceProfile) { profiles[profile.id] = profile }
        func getVoiceProfile(id: String) -> TTSVoiceProfile? { profiles[id] }
        func setDefaultVoiceProfile(_ profile: TTSVoiceProfile) { defaultProfile = profile }
        func getDefaultVoiceProfile() -> TTSVoiceProfile? { defaultProfile }
        func setMasterControl(_ master: TTSMasterControl) { self.master = master }
        func getMasterControl() -> TTSMasterControl { master }
        func speak(_ text: String, using voiceID: String?) async { }
        func stopSpeakingNow() { stopSpeakingCount += 1 }
    }

    private func currentLanguagePrefix() -> String {
        let preferred = Locale.preferredLanguages.first ?? Locale.current.identifier
        return preferred.split(separator: "-").first.map(String.init)?.lowercased() ?? "en"
    }

    func testSamplePhraseIncludesDisplayNameAndSuffix() {
        let tts = FakeTTS()
        let store = VoiceProfilesStore(filename: "extras-\(UUID().uuidString).json")
        let vm = VoicePickerViewModel(tts: tts, store: store)

        let profile = TTSVoiceProfile(id: "v", displayName: "Charlie", rate: 0.5, pitch: 1.0, volume: 1.0)
        let phrase = vm.samplePhrase(for: profile, suffix: "at speed 0.50")
        XCTAssertTrue(phrase.contains("Charlie"))
        XCTAssertTrue(phrase.contains("at speed 0.50"))
    }

    func testStopPreviewStopsSpeaking() {
        let lang = currentLanguagePrefix()
        let tts = FakeTTS()
        tts.voices = [ TTSVoiceInfo(id: "v1", name: "Alpha", language: "\(lang)-US") ]
        let store = VoiceProfilesStore(filename: "extras2-\(UUID().uuidString).json")
        let vm = VoicePickerViewModel(tts: tts, store: store)

        vm.stopPreview()
        XCTAssertEqual(tts.stopSpeakingCount, 1)
    }
}
